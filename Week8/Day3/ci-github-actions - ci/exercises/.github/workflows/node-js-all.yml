# # This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# # For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Node.js CI and Publish

on:
  push:
    branches: [main]
  pull_request:
    types: [closed]
    branches:
      - main

jobs:

  build-test-publish:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [16.x, 17.x, 18.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
          registry-url: "https://npm.pkg.github.com"
          scope: "@infinityworks"
      - name: Cache dependencies
        uses: actions/cache@v1
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - name: npm make package-lock if missing
        working-directory: ./pokemon-app
        run: npm i --package-lock-only
      - name: npm ci
        working-directory: ./pokemon-app
        run: npm ci
      - name: npm build
        working-directory: ./pokemon-app
        run: npm run build --if-present
      - name: npm test
        working-directory: ./pokemon-app
        run: npm test
      - name: show package version
        working-directory: ./pokemon-app
        run: |
          PACKAGE_VERSION=$(cat package.json \
                    | grep '"version":' \
                    | sed -E 's/.*"([^"]+)".*/\1/')
          echo "PACKAGE_VERSION=${PACKAGE_VERSION}"
      - name: npm publish
        working-directory: ./pokemon-app
        run: npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
